class Solution {
public:
 TreeNode* solve(TreeNode *root, TreeNode* n1, TreeNode* n2)
   {
    if(root==NULL)
    return root;
    if(root==n1)
    return root;
    if(root==n2)
    return root;
    TreeNode* left= solve(root->left,n1,n2);
    TreeNode* right=solve(root->right,n1,n2);
    if(left==NULL&&right==NULL)
    return NULL;
    else if(left!=NULL&&right==NULL)
    return left;
    else if(left==NULL&&right!=NULL)
    return right;
    else
    return root;
   }
    TreeNode* lowestCommonAncestor(TreeNode* root, TreeNode* p, TreeNode* q) {
         TreeNode *res=solve(root,p,q);
        return res;
    }
};