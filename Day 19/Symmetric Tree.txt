 bool solve(TreeNode* p,TreeNode* q)
    {
          if(p==NULL&&q==NULL)
           return true;
           if(q==NULL&&p!=NULL)
           return false;
           if(q!=NULL&&p==NULL)
           return false;
           if(p->val!=q->val)
           return false;
          bool left= solve(p->left,q->left);
          bool right= solve(p->right,q->right);
           if(left==false || right==false)
           return false;
           else
           {
           if(p->right==NULL && q->left==NULL&& p->left==NULL && q->right==NULL&&p->val!=q->val)
           return true;
           else if(p->right!=NULL && q->left!=NULL&& p->left!=NULL && q->right!=NULL&&p->val==q->val)
           return true;
           else
           return false;
           }
    }
    bool isSymmetric(TreeNode* root) {
        return solve(root->left,root->right);
    }