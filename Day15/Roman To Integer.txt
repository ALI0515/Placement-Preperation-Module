int romanToInt(string s) {
       map<char, int> mp;
        
        mp.insert(pair<char, int>('I', 1));
       mp.insert(pair<char, int>('V', 5));
        mp.insert(pair<char, int>('X', 10));
        mp.insert(pair<char, int>('L', 50));
        mp.insert(pair<char, int>('C', 100));
       mp.insert(pair<char, int>('D', 500));
        mp.insert(pair<char, int>('M', 1000));
        
        int sum = 0;
        
        for (int i = 0; i < s.length(); i++)  {
            
            if ((mp[s[i+1]] > mp[s[i]]) && (i < s.length()-1)) {

                sum += mp[s[i+1]] - mp[s[i]];
                i++;
                
            } else {
               sum += mp[s[i]];
            }
            
        }
        
        return sum;
        
    }