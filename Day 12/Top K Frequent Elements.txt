class Solution {
public:
    vector<int> topKFrequent(vector<int>& nums, int k) {
          sort(nums.begin(),nums.end());
        priority_queue<pair<int,int>>pq;
        vector<int>ans;
        int c=1,i;
        if(nums.size()==1)
        pq.push(make_pair(1,nums[0]));
        else
        {
        for(i=1;i<nums.size();i++)
        {
          if(nums[i]==nums[i-1])
          {
              c++;
          }
            else if(nums[i]!=nums[i-1])
            {
               pq.push(make_pair(c,nums[i-1]));
               c=1;
            }
        }
           
            pq.push(make_pair(c,nums[i-1]));
        }
        for(int i=0;i<k;i++)
        {
            cout<<pq.top().first<<"->"<<pq.top().second;
            ans.push_back(pq.top().second);
            pq.pop();
        }
        
        return ans;
    }
};